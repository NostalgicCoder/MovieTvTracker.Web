@using TmdbApi.Lib.Models;

@model Media;

@{
    ViewData["Title"] = "Home Page";

    string firstAirDate = "Unknown";
    string lastAirDate = "Unknown";

    if (!string.IsNullOrEmpty(Model.TMDBData.TvIdResult.first_air_date))
    {
        firstAirDate = Convert.ToDateTime(Model.TMDBData.TvIdResult.first_air_date).Year.ToString();
    }

    if (!string.IsNullOrEmpty(Model.TMDBData.TvIdResult.last_air_date))
    {
        lastAirDate = Convert.ToDateTime(Model.TMDBData.TvIdResult.last_air_date).Year.ToString();
    }
}

<script type="text/javascript">

    // fire once the window has fully loaded
    window.onload = function() {

        var vote = @Html.Raw(Json.Serialize(Model.TMDBData.TvIdResult.vote_average)) // Scores will come down like 6.6 or 7.1 so decimal value

        var idVal = document.getElementById('spanScore');

        if (vote >= 7) {
            idVal.style.color = 'green';
            idVal.style.fontWeight = 'bold';
        }
        else if (vote > 5 && vote < 7) {
            idVal.style.color = 'orange';
            idVal.style.fontWeight = 'bold';
        }
        else if (vote < 5) {
            idVal.style.color = 'red';
            idVal.style.fontWeight = 'bold';
        }
    }

</script>

<h3>@Model.TMDBData.TvIdResult.name (@firstAirDate - @lastAirDate)</h3>

<p></p>

@{
    string url = "https://image.tmdb.org/t/p/original" + Model.TMDBData.TvIdResult.poster_path;

    @if (string.IsNullOrEmpty(Model.TMDBData.TvIdResult.poster_path))
    {
        <img id="Cinema.jpg" class="filmTvDetailPosterImgSize" src="~/Images/Cinema.jpg" />
    }
    else
    {
        <img src="@url" class="filmTvDetailPosterImgSize" />
    }
}

<p></p>

<form method="post" asp-action="MarkAsWatched">

    @{
        Model.SelectedContentType = "TV";
    }

    <input type="hidden" asp-for="@Model.SelectedTMDBId" />
    <input type="hidden" asp-for="@Model.SelectedContentType" />

    <button type="submit" class="btn btn-primary">Mark As Watched <i class="bi bi-plus-circle"></i></button>

</form>

<p></p>

<div class="card border-secondary mb-3" style="width: 100%">
    <div class="card-header">General Information:</div>
    <div class="card-body">
        <li>Score: <span id="spanScore">@Model.TMDBData.Score</span>&nbsp; <i class="bi bi-info-square" data-toggle="tooltip" data-placement="right" title="Green is high, orange is medium and red is a low rating score."></i></li>
        <li>Genres: @String.Join(", ", Model.TMDBData.TvIdResult.genres.Select(x => x.name).ToArray())</li>

        @{
            if (!string.IsNullOrEmpty(Model.TMDBData.TvIdResult.tagline))
            {
                <li>Tagline: @Model.TMDBData.TvIdResult.tagline</li>
            }
        }
    </div>
</div>

<p></p>

<div class="card border-secondary mb-3" style="width: 100%">
    <div class="card-header">Overview:</div>
    <div class="card-body">
        @Model.TMDBData.TvIdResult.overview
    </div>
</div>

<p></p>

<div class="card border-secondary mb-3" style="width: 100%">
    <div class="card-header">Main Cast:</div>
    <div class="card-body">
        @{
            List<Cast> castColl;

            if (Model.TMDBData.CreditsByTvId.cast.Count() > 15)
            {
                castColl = Model.TMDBData.CreditsByTvId.cast.OrderBy(item => item.order).Take(15).ToList();
            }
            else
            {
                castColl = Model.TMDBData.CreditsByTvId.cast.OrderBy(item => item.order).ToList();
            }

            foreach (Cast cast in castColl)
            {
                <div class="inner_block">
                    <table>
                        <tr>
                            <td>
                                <div class="castInfoContainer">
                                    @cast.name
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @{
                                    string castUrl = "https://image.tmdb.org/t/p/original" + cast.profile_path;

                                    <a href="@Url.Action("GetUserPersonSelectionById", "Movie", new { id = cast.id })">

                                        @if (string.IsNullOrEmpty(cast.profile_path))
                                        {
                                            <img id="Cinema.jpg" class="castImgSize" src="~/Images/Cinema.jpg" />
                                        }
                                        else
                                        {
                                            <img src="@castUrl" class="castImgSize" />
                                        }

                                    </a>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="castInfoContainer">
                                    @{
                                        if (!string.IsNullOrEmpty(cast.character))
                                        {
                                            @cast.character
                                        }
                                        else
                                        {
                                            @: Unknown
                                        }
                                    }
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            }
        }
    </div>
</div>